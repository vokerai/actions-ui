{
	"name": "sonner",
	"dependencies": [
		"svelte-sonner",
		"mode-watcher"
	],
	"registryDependencies": [],
	"shadcnDependencies": [
		"sonner"
	],
	"files": [
		{
			"name": "context.ts",
			"content": "import { getContext, setContext } from 'svelte';\nimport { writable, type Writable } from 'svelte/store';\n\nconst sonnerContextKey = 'actionsui-sonner-error';\n\nexport let createToastErrorCtx = (): Writable<string | undefined> => {\n    const ctx = writable<string | undefined>(undefined);\n    setContext(sonnerContextKey, ctx);\n    return ctx;\n};\n\nexport let getToastErrorCtx = (): Writable<string | undefined> => {\n    return getContext<Writable<string | undefined>>(sonnerContextKey);\n};\n"
		},
		{
			"name": "sonner.svelte",
			"content": "<script lang=\"ts\">\n    import Sonner from '$lib/components/ui/sonner/sonner.svelte';\n    import { toast } from 'svelte-sonner';\n    import { getToastErrorCtx } from './context';\n    import { getContext, onMount } from 'svelte';\n    import { browser } from '$app/environment';\n\n    export let title: string;\n\n    const ctx = getToastErrorCtx();\n\n    const sendToast = (description: string | undefined) => {\n        if (description === undefined) {\n            return;\n        }\n\n        toast.error(title, { description });\n    };\n\n    onMount(() => {\n        if (ctx !== undefined) {\n            ctx.subscribe((description) => {\n                sendToast(description);\n            });\n        }\n    });\n</script>\n\n<Sonner richColors />\n"
		}
	],
	"type": "components:actions-ui"
}