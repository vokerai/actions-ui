{
	"name": "action-button",
	"dependencies": [
		"svelte-sonner",
		"mode-watcher"
	],
	"registryDependencies": [],
	"shadcnDependencies": [
		"sonner",
		"button"
	],
	"files": [
		{
			"name": "content.svelte",
			"content": "<script>\n\timport { cn } from \"$lib/utils\";\n\timport { getLoadingCtx } from \"./context\";\n\tlet className = undefined;\n\texport { className as class };\n\tconst loading = getLoadingCtx();\n</script>\n\n<div class={cn($loading ? \"hidden\" : \"\", className)} {...$$restProps}>\n\t<slot />\n</div>\n"
		},
		{
			"name": "context.js",
			"content": "import { getContext, setContext } from \"svelte\";\nimport { writable } from \"svelte/store\";\nconst loadingKey = \"button-loading\";\nexport const createLoadingCtx = (initialValue = false) => {\n\tconst loading = writable(initialValue);\n\tsetContext(loadingKey, loading);\n\treturn loading;\n};\nexport const getLoadingCtx = () => {\n\treturn getContext(loadingKey);\n};\n"
		},
		{
			"name": "index.js",
			"content": "import Content from \"./content.svelte\";\nimport Loading from \"./loading.svelte\";\nimport Root from \"./root.svelte\";\nimport Spinner from \"./spinner.svelte\";\nimport ErrorToast from \"./toast/toast.svelte\";\nexport { Content, Loading, Root, Spinner, ErrorToast };\n"
		},
		{
			"name": "loading.svelte",
			"content": "<script>\n\timport { cn } from \"$lib/utils\";\n\timport { getLoadingCtx } from \"./context\";\n\tlet className = undefined;\n\texport { className as class };\n\tconst loading = getLoadingCtx();\n</script>\n\n<div class={cn($loading ? \"\" : \"hidden\", className)} {...$$restProps}>\n\t<slot />\n</div>\n"
		},
		{
			"name": "root.svelte",
			"content": "<script>\n\timport { Button, ButtonProps } from \"$lib/components/ui/button\";\n\timport { cn } from \"$lib/utils\";\n\timport { createToastErrorCtx } from \"./toast/context\";\n\timport { createLoadingCtx } from \"./context\";\n\tlet className = undefined;\n\texport { className as class };\n\texport let onClick = undefined;\n\tconst disabled = createLoadingCtx();\n\tconst toastError = createToastErrorCtx();\n\tconst click = async () => {\n\t\tif (onClick === undefined) {\n\t\t\treturn;\n\t\t}\n\t\t$disabled = true;\n\t\t$toastError = undefined;\n\t\ttry {\n\t\t\tconst { error } = await onClick();\n\t\t\tif (error === undefined) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t$toastError = error;\n\t\t} catch {\n\t\t\t$toastError = \"Error using button\";\n\t\t} finally {\n\t\t\t$disabled = false;\n\t\t}\n\t};\n</script>\n\n<Button\n\tclass={cn(\"flex select-none items-center space-x-1\", className)}\n\ton:click={click}\n\tdisabled={$disabled}\n\t{...$$restProps}\n>\n\t<slot />\n</Button>\n"
		},
		{
			"name": "spinner.svelte",
			"content": "<script>\n\timport { cn } from \"$lib/utils\";\n\timport { getLoadingCtx } from \"./context\";\n\timport Spinner from \"../shared/spinner.svelte\";\n\tlet className = undefined;\n\texport { className as class };\n\tconst loading = getLoadingCtx();\n</script>\n\n<Spinner class={cn($loading ? \"\" : \"hidden\", className)} {...$$restProps} />\n"
		},
		{
			"name": "toast/context.js",
			"content": "import { getContext, setContext } from \"svelte\";\nimport { writable } from \"svelte/store\";\nconst toastContextErrorKey = \"actionsui-sonner-error\";\nexport let createToastErrorCtx = () => {\n\tconst ctx = writable(undefined);\n\tsetContext(toastContextErrorKey, ctx);\n\treturn ctx;\n};\nexport let getToastErrorCtx = () => {\n\treturn getContext(toastContextErrorKey);\n};\n"
		},
		{
			"name": "toast/toast.svelte",
			"content": "<script>\n\timport { toast } from \"svelte-sonner\";\n\timport { getToastErrorCtx } from \"./context.js\";\n\timport { onMount } from \"svelte\";\n\texport let title;\n\tconst ctx = getToastErrorCtx();\n\tconst sendToast = (description) => {\n\t\tif (description === undefined) {\n\t\t\treturn;\n\t\t}\n\t\ttoast.error(title, { description });\n\t};\n\tonMount(() => {\n\t\tctx.subscribe((description) => {\n\t\t\tsendToast(description);\n\t\t});\n\t});\n</script>\n"
		}
	],
	"type": "components:actions-ui"
}